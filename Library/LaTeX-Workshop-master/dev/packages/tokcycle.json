{
  "includes": {},
  "macros": {
    "tokcycle{}{}{}{}{}": {
      "snippet": "tokcycle{${1:character code}}{${2:group-content code}}{${3:macro code}}{${4:space code}}{${5:token input}}"
    },
    "expandedtokcycle{}{}{}{}{}": {
      "snippet": "expandedtokcycle{${1:character code}}{${2:group-content code}}{${3:macro code}}{${4:space code}}{${5:token input}}"
    },
    "tokencycle{}{}{}{}": {
      "snippet": "tokencycle{${1:character code}}{${2:group-content code}}{${3:macro code}}{${4:space code}}"
    },
    "endtokencycle": {},
    "tokcyclexpress{}": {
      "snippet": "tokcyclexpress{${1:token input}}"
    },
    "expandedtokcyclexpress{}": {
      "snippet": "expandedtokcyclexpress{${1:token input}}"
    },
    "tokencyclexpress": {},
    "endtokencyclexpress": {},
    "tokcycleenvironment{}{}{}{}{}": {
      "snippet": "tokcycleenvironment{${1:command}}{${2:character code}}{${3:group-content code}}{${4:macro code}}{${5:space code}}"
    },
    "xtokcycleenvironment{}{}{}{}{}{}{}": {
      "snippet": "xtokcycleenvironment{${1:command}}{${2:character code}}{${3:group-content code}}{${4:macro code}}{${5:space code}}{${6:begin code}}{${7:end code}}"
    },
    "tcafterenv{}": {
      "snippet": "tcafterenv{${1:code}}"
    },
    "Characterdirective{}": {
      "snippet": "Characterdirective{${1:code}}"
    },
    "Groupdirective{}": {
      "snippet": "Groupdirective{${1:code}}"
    },
    "Macrodirective{}": {
      "snippet": "Macrodirective{${1:code}}"
    },
    "Spacedirective{}": {
      "snippet": "Spacedirective{${1:code}}"
    },
    "resetCharacterdirective": {},
    "resetGroupdirective": {},
    "resetMacrodirective": {},
    "resetSpacedirective": {},
    "resettokcycle": {},
    "cytoks": {},
    "addcytoks{}": {
      "snippet": "addcytoks{${1:tokens}}"
    },
    "addcytoks[]{}": {
      "snippet": "addcytoks[${2:<${3:integer}> or x}]{${1:tokens}}"
    },
    "ifstripgrouping": {},
    "stripgroupingtrue": {},
    "stripgroupingfalse": {},
    "processtoks{}": {
      "snippet": "processtoks{${1:tokens}}"
    },
    "groupedcytoks{}": {
      "snippet": "groupedcytoks{${1:code}}"
    },
    "stripimplicitgroupingcase{}": {
      "snippet": "stripimplicitgroupingcase{${1:0, 1, or -1}}"
    },
    "tcpeek{}": {
      "snippet": "tcpeek{${1:cmd}}"
    },
    "tcpop{}": {
      "snippet": "tcpop{${1:cmd}}"
    },
    "tcpopliteral{}": {
      "snippet": "tcpopliteral{${1:cmd}}"
    },
    "tcpopappto{}": {
      "snippet": "tcpopappto{${1:cmd}}"
    },
    "tcpopliteralappto{}": {
      "snippet": "tcpopliteralappto{${1:cmd}}"
    },
    "tcpopuntil": {},
    "tcpopwhitespace{}": {
      "snippet": "tcpopwhitespace{${1:cmd}}"
    },
    "ifspacepopped": {},
    "spacepoppedtrue": {},
    "spacepoppedfalse": {},
    "tcpush{}": {
      "snippet": "tcpush{${1:code}}"
    },
    "tcpush[]{}": {
      "snippet": "tcpush[${2:<${3:integer}> or x}]{${1:code}}"
    },
    "tcpushgroup{}": {
      "snippet": "tcpushgroup{${1:code}}"
    },
    "tcpushgroup[]{}": {
      "snippet": "tcpushgroup[${2:<${3:integer}> or x}]{${1:code}}"
    },
    "truncategroup": {},
    "truncategroupiftokis{}{}": {
      "snippet": "truncategroupiftokis{${1:token}}{${2:false code}}"
    },
    "truncatecycle": {},
    "truncatecycleiftokis{}{}": {
      "snippet": "truncatecycleiftokis{${1:token}}{${2:false code}}"
    },
    "settcEscapechar{}": {
      "snippet": "settcEscapechar{${1:escape token}}"
    },
    "ifactivetok": {},
    "activetoktrue": {},
    "activetokfalse": {},
    "ifactivetokunexpandable": {},
    "activetokunexpandabletrue": {},
    "activetokunexpandablefalse": {},
    "ifactivechar": {},
    "activechartrue": {},
    "activecharfalse": {},
    "ifimplicittok": {},
    "implicittoktrue": {},
    "implicittokfalse": {},
    "tcsptoken": {},
    "theactivespace": {},
    "ifcatSIX": {},
    "catSIXtrue": {},
    "catSIXfalse": {},
    "implicitsixtok": {},
    "tctestifcon{}{}{}": {
      "snippet": "tctestifcon{${1:TeX if condition}}{${2:true}}{${3:false}}"
    },
    "tctestifx{}{}{}": {
      "snippet": "tctestifx{${1:\\ifx comparison tokens}}{${2:true}}{${3:false}}"
    },
    "tctestifnum{}{}{}": {
      "snippet": "tctestifnum{${1:\\ifnum condition}}{${2:true}}{${3:false}}"
    },
    "aftertokcycle{}": {
      "snippet": "aftertokcycle{${1:actions}}"
    },
    "tcendgroup": {},
    "settcGrouping": {},
    "backslashcmds{}": {
      "snippet": "backslashcmds{${1:arg}}"
    },
    "csmk": {},
    "implicitgrpfork{}": {
      "snippet": "implicitgrpfork{${1:arg}}"
    },
    "restorecatcode": {},
    "stringify{}": {
      "snippet": "stringify{${1:arg}}"
    },
    "tcenvscope": {},
    "tokcycrawxpress": {},
    "tokcycraw{}{}{}{}": {
      "snippet": "tokcycraw{${1:arg1}}{${2:arg2}}{${3:arg3}}{${4:arg4}}"
    },
    "endtokcycraw": {},
    "trapactivechar{}": {
      "snippet": "trapactivechar{${1:arg}}"
    },
    "trapactives{}": {
      "snippet": "trapactives{${1:arg}}"
    },
    "trapactivetokunexpandable{}": {
      "snippet": "trapactivetokunexpandable{${1:arg}}"
    },
    "trapactivetok{}": {
      "snippet": "trapactivetok{${1:arg}}"
    },
    "trapcatSIXb{}": {
      "snippet": "trapcatSIXb{${1:arg}}"
    },
    "trapcatSIXc{}": {
      "snippet": "trapcatSIXc{${1:arg}}"
    },
    "trapcatSIX{}": {
      "snippet": "trapcatSIX{${1:arg}}"
    },
    "trapimplicitegrp{}": {
      "snippet": "trapimplicitegrp{${1:arg}}"
    },
    "tcname": {},
    "tcver": {},
    "tcdate": {}
  },
  "envs": {},
  "options": [],
  "keyvals": []
}