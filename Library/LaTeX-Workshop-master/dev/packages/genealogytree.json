{
  "includes": {
    "tcolorbox": [],
    "tcolorboxlibraryskins": [],
    "tcolorboxlibraryfitting": [],
    "tcolorboxlibraryexternal": [],
    "tikzlibraryfit": [],
    "array": [
      "debug"
    ],
    "tabularx": [
      "debug"
    ],
    "tcolorboxlibrarybreakable": [
      "debug"
    ]
  },
  "macros": {
    "gtruselibrary{}": {
      "snippet": "gtruselibrary{${1:library list}}"
    },
    "genealogytree{}": {
      "snippet": "genealogytree{${1:tree contents}}"
    },
    "genealogytree[]{}": {
      "snippet": "genealogytree[${2:options}]{${1:tree contents}}",
      "keyvalindex": 0,
      "keyvalpos": 0
    },
    "genealogytreeinput{}": {
      "snippet": "genealogytreeinput{${1:file}}"
    },
    "genealogytreeinput[]{}": {
      "snippet": "genealogytreeinput[${2:options}]{${1:file}}",
      "keyvalindex": 0,
      "keyvalpos": 0
    },
    "gtrset{}": {
      "snippet": "gtrset{${1:options}}",
      "keyvalindex": 1,
      "keyvalpos": 0
    },
    "gtrkeysappto{}{}": {
      "snippet": "gtrkeysappto{${1:hook}}{${2:options}}",
      "keyvalindex": 0,
      "keyvalpos": 1
    },
    "gtrkeysgappto{}{}": {
      "snippet": "gtrkeysgappto{${1:hook}}{${2:options}}",
      "keyvalindex": 0,
      "keyvalpos": 1
    },
    "gtrnodetype": {},
    "gtrnodeid": {},
    "gtrnodenumber": {},
    "gtrnodefamily": {},
    "gtrnodelevel": {},
    "gtrifnodeid{}{}": {
      "snippet": "gtrifnodeid{${1:true}}{${2:false}}"
    },
    "gtrifgnode{}{}": {
      "snippet": "gtrifgnode{${1:true}}{${2:false}}"
    },
    "gtrifcnode{}{}": {
      "snippet": "gtrifcnode{${1:true}}{${2:false}}"
    },
    "gtrifpnode{}{}": {
      "snippet": "gtrifpnode{${1:true}}{${2:false}}"
    },
    "gtrifroot{}{}": {
      "snippet": "gtrifroot{${1:true}}{${2:false}}"
    },
    "gtrifleaf{}{}": {
      "snippet": "gtrifleaf{${1:true}}{${2:false}}"
    },
    "gtrifchild{}{}": {
      "snippet": "gtrifchild{${1:true}}{${2:false}}"
    },
    "gtrifparent{}{}": {
      "snippet": "gtrifparent{${1:true}}{${2:false}}"
    },
    "gtrifleafchild{}{}": {
      "snippet": "gtrifleafchild{${1:true}}{${2:false}}"
    },
    "gtrifleafparent{}{}": {
      "snippet": "gtrifleafparent{${1:true}}{${2:false}}"
    },
    "gtrautosizebox{}{}{}": {
      "snippet": "gtrautosizebox{${1:width}}{${2:height}}{${3:contents}}"
    },
    "gtrautosizebox*{}{}{}": {
      "snippet": "gtrautosizebox*{${1:width}}{${2:height}}{${3:contents}}"
    },
    "gtrsetoptionsfornode{}{}": {
      "snippet": "gtrsetoptionsfornode{${1:id list}}{${2:options}}",
      "keyvalindex": 0,
      "keyvalpos": 1
    },
    "gtrsetoptionsforfamily{}{}": {
      "snippet": "gtrsetoptionsforfamily{${1:id list}}{${2:options}}",
      "keyvalindex": 0,
      "keyvalpos": 1
    },
    "gtrsetoptionsforsubtree{}{}": {
      "snippet": "gtrsetoptionsforsubtree{${1:id list}}{${2:options}}",
      "keyvalindex": 0,
      "keyvalpos": 1
    },
    "gtrignorenode{}": {
      "snippet": "gtrignorenode{${1:id list}}"
    },
    "gtrignoresubtree{}": {
      "snippet": "gtrignoresubtree{${1:id list}}"
    },
    "gtrBoxContent": {},
    "gtrNodeMinWidth": {},
    "gtrNodeMaxWidth": {},
    "gtrNodeMinHeight": {},
    "gtrNodeMaxHeight": {},
    "gtrNodeBoxOptions": {},
    "gtrDBname": {},
    "gtrDBshortname": {},
    "gtrDBsex": {},
    "gtrDBcomment": {},
    "gtrDBprofession": {},
    "gtrDBimage": {},
    "gtrDBimageopt": {},
    "gtrDBviewport": {},
    "gtrDBuuid": {},
    "gtrDBkekule": {},
    "gtrDBrelation": {},
    "gtrDBrelationship": {},
    "gtrDBage": {},
    "gtrParseDate{}{}": {
      "snippet": "gtrParseDate{${1:name}}{${2:date}}"
    },
    "gtrDeclareDatabaseFormat{}{}{}": {
      "snippet": "gtrDeclareDatabaseFormat{${1:format}}{${2:option code}}{${3:content code}}"
    },
    "gtrPrintDatabase": {},
    "gtrPrintName": {},
    "pref{}": {
      "snippet": "pref{${1:given name}}"
    },
    "surn{}": {
      "snippet": "surn{${1:surname}}"
    },
    "nick{}": {
      "snippet": "nick{${1:nickname}}"
    },
    "gtrPrintDate{}": {
      "snippet": "gtrPrintDate{${1:name}}"
    },
    "gtrifdatedefined{}{}{}": {
      "snippet": "gtrifdatedefined{${1:name}}{${2:true}}{${3:false}}"
    },
    "gtrPrintPlace{}": {
      "snippet": "gtrPrintPlace{${1:name}}"
    },
    "gtrifplacedefined{}{}{}": {
      "snippet": "gtrifplacedefined{${1:name}}{${2:true}}{${3:false}}"
    },
    "gtrPrintEvent{}": {
      "snippet": "gtrPrintEvent{${1:name}}"
    },
    "gtrifeventdefined{}{}{}": {
      "snippet": "gtrifeventdefined{${1:name}}{${2:true}}{${3:false}}"
    },
    "gtrPrintEventPrefix{}": {
      "snippet": "gtrPrintEventPrefix{${1:name}}"
    },
    "gtrlistseparator": {},
    "gtrPrintComment": {},
    "gtrifcommentdefined{}{}": {
      "snippet": "gtrifcommentdefined{${1:true}}{${2:false}}"
    },
    "gtrPrintProfession": {},
    "gtrifprofessiondefined{}{}": {
      "snippet": "gtrifprofessiondefined{${1:true}}{${2:false}}"
    },
    "gtrPrintSex": {},
    "gtriffemale{}{}": {
      "snippet": "gtriffemale{${1:true}}{${2:false}}"
    },
    "gtrifmale{}{}": {
      "snippet": "gtrifmale{${1:true}}{${2:false}}"
    },
    "gtrifimagedefined{}{}": {
      "snippet": "gtrifimagedefined{${1:true}}{${2:false}}"
    },
    "gtrincludeDBimage{}": {
      "snippet": "gtrincludeDBimage{${1:options}}"
    },
    "gtrPrintAge": {},
    "gtrifagedefined{}{}": {
      "snippet": "gtrifagedefined{${1:true}}{${2:false}}"
    },
    "gtredgeset{}": {
      "snippet": "gtredgeset{${1:edge options}}"
    },
    "gtrSymbolsSetCreate{}": {
      "snippet": "gtrSymbolsSetCreate{${1:color}}"
    },
    "gtrSymbolsSetCreateSelected{}{}": {
      "snippet": "gtrSymbolsSetCreateSelected{${1:color}}{${2:list}}"
    },
    "gtrSymbolsSetDraw{}": {
      "snippet": "gtrSymbolsSetDraw{${1:color}}"
    },
    "gtrsymBorn": {},
    "gtrsymBornoutofwedlock": {},
    "gtrsymStillborn": {},
    "gtrsymDiedonbirthday": {},
    "gtrsymBaptized": {},
    "gtrsymEngaged": {},
    "gtrsymMarried": {},
    "gtrsymDivorced": {},
    "gtrsymPartnership": {},
    "gtrsymDied": {},
    "gtrsymKilled": {},
    "gtrsymBuried": {},
    "gtrsymFuneralurn": {},
    "gtrsymFloruit": {},
    "gtrsymFemale": {},
    "gtrsymMale": {},
    "gtrsymNeuter": {},
    "gtrSymbolsRecordReset": {},
    "gtrSymbolsFullLegend": {},
    "gtrSymbolsFullLegend[]": {
      "snippet": "gtrSymbolsFullLegend[${1:language}]"
    },
    "gtrSymbolsLegend": {},
    "gtrSymbolsLegend[]": {
      "snippet": "gtrSymbolsLegend[${1:language}]"
    },
    "gtrlanguagename": {},
    "gtrloadlanguage{}": {
      "snippet": "gtrloadlanguage{${1:list of languages}}"
    },
    "gtrparserdebug{}": {
      "snippet": "gtrparserdebug{${1:graph content}}"
    },
    "gtrparserdebug[]{}": {
      "snippet": "gtrparserdebug[${2:options}]{${1:graph content}}",
      "keyvalindex": 0,
      "keyvalpos": 0
    },
    "gtrparserdebuginput{}": {
      "snippet": "gtrparserdebuginput{${1:file}}"
    },
    "gtrparserdebuginput[]{}": {
      "snippet": "gtrparserdebuginput[${2:options}]{${1:file}}",
      "keyvalindex": 0,
      "keyvalpos": 0
    },
    "gtrprocessordebug{}": {
      "snippet": "gtrprocessordebug{${1:graph content}}"
    },
    "gtrprocessordebug[]{}": {
      "snippet": "gtrprocessordebug[${2:options}]{${1:graph content}}",
      "keyvalindex": 0,
      "keyvalpos": 0
    },
    "gtrprocessordebuginput{}": {
      "snippet": "gtrprocessordebuginput{${1:file}}"
    },
    "gtrprocessordebuginput[]{}": {
      "snippet": "gtrprocessordebuginput[${2:options}]{${1:file}}",
      "keyvalindex": 0,
      "keyvalpos": 0
    },
    "gtrdebugdrawcontour{}{}": {
      "snippet": "gtrdebugdrawcontour{${1:options}}{${2:path options}}",
      "keyvalindex": 2,
      "keyvalpos": 0
    },
    "gtrDrawSymbolicPortrait": {},
    "gtrfanchart{}": {
      "snippet": "gtrfanchart{${1:tree contents}}"
    },
    "gtrfanchart[]{}": {
      "snippet": "gtrfanchart[${2:options}]{${1:tree contents}}",
      "keyvalindex": 1,
      "keyvalpos": 0
    },
    "gtrfanchartinput{}": {
      "snippet": "gtrfanchartinput{${1:file}}"
    },
    "gtrfanchartinput[]{}": {
      "snippet": "gtrfanchartinput[${2:options}]{${1:file}}",
      "keyvalindex": 1,
      "keyvalpos": 0
    },
    "gtrcomplemented": {},
    "gtrnewstack{}": {
      "snippet": "gtrnewstack{${1:name}}"
    },
    "gtrstacksize{}": {
      "snippet": "gtrstacksize{${1:name}}"
    },
    "gtrstackpush{}{}": {
      "snippet": "gtrstackpush{${1:name}}{${2:content}}"
    },
    "gtrstackpop{}": {
      "snippet": "gtrstackpop{${1:name}}"
    },
    "gtrstackpopto{}{}": {
      "snippet": "gtrstackpopto{${1:name}}{${2:macro}}"
    },
    "gtrstackpeek{}": {
      "snippet": "gtrstackpeek{${1:name}}"
    },
    "gtrstackpeekto{}{}": {
      "snippet": "gtrstackpeekto{${1:name}}{${2:macro}}"
    },
    "gtrmakestack{}": {
      "snippet": "gtrmakestack{${1:name}}"
    },
    "gtrpkgprefix": {}
  },
  "envs": {
    "genealogypicture": {},
    "genealogypicture[]": {
      "name": "genealogypicture",
      "snippet": "[${1:options}]",
      "keyvalindex": 0,
      "keyvalpos": 0
    },
    "exgenealogypicture{}": {
      "name": "exgenealogypicture",
      "snippet": "{${1:name}}"
    },
    "exgenealogypicture{}[]": {
      "name": "exgenealogypicture",
      "snippet": "{${1:name}}[${2:options}]",
      "keyvalindex": 3,
      "keyvalpos": 1
    },
    "exgenealogypicture[]{}": {
      "name": "exgenealogypicture",
      "snippet": "[${2:externalization options}]{${1:name}}"
    },
    "exgenealogypicture[]{}[]": {
      "name": "exgenealogypicture",
      "snippet": "[${2:externalization options}]{${1:name}}[${3:options}]",
      "keyvalindex": 3,
      "keyvalpos": 2
    },
    "autosizetikzpicture{}{}": {
      "name": "autosizetikzpicture",
      "snippet": "{${1:width}}{${2:height}}"
    },
    "autosizetikzpicture[]{}{}": {
      "name": "autosizetikzpicture",
      "snippet": "[${3:options}]{${1:width}}{${2:height}}",
      "keyvalindex": 4,
      "keyvalpos": 0
    },
    "autosizetikzpicture*{}{}": {
      "name": "autosizetikzpicture*",
      "snippet": "{${1:width}}{${2:height}}"
    },
    "autosizetikzpicture*[]{}{}": {
      "name": "autosizetikzpicture*",
      "snippet": "[${3:options}]{${1:width}}{${2:height}}",
      "keyvalindex": 4,
      "keyvalpos": 0
    },
    "gtrprintlist{}{}{}{}": {
      "name": "gtrprintlist",
      "snippet": "{${1:first}}{${2:middle}}{${3:last}}{${4:empty}}"
    },
    "gtreventlist": {},
    "gtrinfolist": {}
  },
  "options": [
    "debug",
    "templates",
    "fanchart",
    "all"
  ],
  "keyvals": [
    [
      "timeflow=",
      "level distance=",
      "level size=",
      "node size=",
      "node size from=${1:<minlength>} to ${2:<maxlength>}",
      "child distance in parent graph=",
      "child distance in child graph=",
      "child distance=",
      "parent distance in parent graph=",
      "parent distance in child graph=",
      "parent distance=",
      "further distance=",
      "id=${1:name}",
      "id prefix=${1:text}",
      "id suffix=${1:text}",
      "options for node={${1:id list}}{${2:options}}",
      "node={${1:options}}",
      "distance=",
      "pivot",
      "pivot=",
      "box={${1:options}}",
      "box clear",
      "node box={${1:options}}",
      "family box={${1:options}}",
      "subtree box={${1:options}}",
      "turn",
      "turn=",
      "male",
      "female",
      "neuter",
      "tikz={${1:TikZ options}}",
      "options for family={${1:id list}}{${2:options}}",
      "family={${1:options}}",
      "pivot shift=",
      "options for subtree={${1:id list}}{${2:options}}",
      "subtree={${1:options}}",
      "level=${1:number}",
      "level ${1:n}/.style={${2:options}}",
      "proband level=${1:number}",
      "tree offset=",
      "after parser={${1:code}}",
      "set position=${1:<node>} at ${2:<position>}",
      "adjust position=${1:<node> <direction>} of ${2:<position>} distance ${3:<distance>}",
      "adjust position=${1:<node> <direction>} of ${2:<position>} distance ${3:<distance>} shift ${4:<shift>}",
      "adjust node=${1:<node> <direction>} of ${2:<ref node>} distance ${3:<distance>}",
      "adjust node=${1:<node> <direction>} of ${2:<ref node>} distance ${3:<distance>} shift ${4:<shift>}",
      "tikzpicture={${1:TikZ options}}",
      "tikzset={${1:TikZ options}}",
      "after tree={${1:TikZ code}}",
      "tcbset={${1:tcolorbox options}}",
      "fit to family=${1:id}",
      "fit to subtree=${1:id}",
      "ignore",
      "ignore node={${1:id list}}",
      "ignore subtree={${1:id list}}",
      "ignore level=${1:number}",
      "ignore parent childs",
      "insert after node={${1:id}}{${2:input data}}",
      "insert after family={${1:id}}{${2:input data}}",
      "insert at begin family={${1:id}}{${2:input data}}",
      "insert at end family={${1:id}}{${2:input data}}",
      "phantom",
      "phantom=",
      "phantom*",
      "phantom*=",
      "insert for childless families={${1:input data}}",
      "insert phantom for childless families",
      "insert for childless families level limit=${1:level}",
      "autofill parents unspecific",
      "autofill parents unspecific=${1:level}",
      "autofill parents unspecific*",
      "autofill parents unspecific*=${1:level}",
      "complemented/.style={${1:options}}",
      "complemented family/.style={${1:options}}",
      "complemented phantom",
      "autofill parents male female",
      "autofill parents male female=${1:level}",
      "autofill parents male female*",
      "autofill parents male female*=${1:level}",
      "autofill parents female male",
      "autofill parents female male=${1:level}",
      "autofill parents female male*",
      "autofill parents female male*=${1:level}",
      "autofill parents none",
      "reset",
      "code={${1:code}}",
      "keysfrom=${1:macro}",
      "node processor=${1:macro}",
      "processing=",
      "content interpreter=${1:macro}",
      "content interpreter code={${1:code}}",
      "content interpreter content={${1:code}}",
      "no content interpreter",
      "deletion content interpreter",
      "database content interpreter",
      "id content interpreter",
      "content interpreter id and content={${1:id}}{${2:code}}",
      "database format=",
      "pref code={${1:code}}",
      "surn code={${1:code}}",
      "nick code={${1:code}}",
      "name=",
      "name font={${1:code}}",
      "empty name text={${1:text}}",
      "name code={${1:code}}",
      "date format=",
      "date code={${1:code}}",
      "calendar text for=${1:<calendar>} is %<{${2:prefix}}{${3:postfix}}",
      "calendar print=",
      "date range full={${1:pre}}{${2:mid}}{${3:app}}",
      "date range before={${1:pre}}{${2:app}}",
      "date range after={${1:pre}}{${2:app}}",
      "date range separator={${1:text}}",
      "place text={${1:pre}}{${2:app}}",
      "event prefix/birth=${1:text}",
      "event prefix/birth/out of wedlock=${1:text}",
      "event prefix/birth/stillborn=${1:text}",
      "event prefix/birth/died=${1:text}",
      "event prefix/baptism=${1:text}",
      "event prefix/engagement=${1:text}",
      "event prefix/marriage=${1:text}",
      "event prefix/marriage/other=${1:text}",
      "event prefix/divorce=${1:text}",
      "event prefix/floruit=${1:text}",
      "event prefix/death=${1:text}",
      "event prefix/death/killed=${1:text}",
      "event prefix/burial=${1:text}",
      "event prefix/burial/cremated=${1:text}",
      "event format=",
      "event text={${1:pre}}{${2:sep date}}{${3:sep place}}{${4:app}}",
      "event code={${1:code}}",
      "list separators={${1:first}}{${2:middle}}{${3:last}}{${4:empty}}",
      "list separators hang",
      "list separators hang=",
      "comment code={${1:code}}",
      "profession code={${1:code}}",
      "info separators={${1:first}}{${2:middle}}{${3:last}}{${4:empty}}",
      "if image defined={${1:true}}{${2:false}}",
      "image prefix=${1:text}",
      "fill zoom DBimage",
      "fill overzoom DBimage",
      "age code={${1:code}}",
      "edges={${1:edge options}}",
      "family edges={${1:edge options}}",
      "edges for family={${1:family}}{${2:edge options}}",
      "subtree edges={${1:edge options}}",
      "edges for subtree={${1:subtree}}{${2:edge options}}",
      "edge/perpendicular",
      "edge/rounded",
      "edge/rounded=",
      "edge/swing",
      "edge/swing=",
      "edge/mesh",
      "edge/mesh={${1:options}}",
      "edge/custom={${1:down}}{${2:up}}{${3:left}}{${4:right}}",
      "edge/none",
      "edge/foreground={${1:TikZ options}}",
      "edge/no foreground",
      "edge/background={${1:TikZ options}}",
      "edge/no background",
      "edge/anchoring=",
      "edge/hide single leg",
      "edge/xshift=",
      "edge/yshift=",
      "label={${1:text}}",
      "label options={${1:TikZ options}}",
      "family label={${1:text}}",
      "subtree label={${1:text}}",
      "family database={${1:data keys}}",
      "label database options={${1:options}}",
      "ignore family database",
      "use family database",
      "add child=${1:<child>} to ${2:<family>}",
      "add parent=${1:<parent>} to ${2:<family>}",
      "remove child=${1:<child>} from ${2:<family>}",
      "remove parent=${1:<parent>} from ${2:<family>}",
      "disconnect",
      "disconnect=",
      "extra edges={${1:parents}}{${2:children}}{${3:edge options}}",
      "family extra edges={${1:parents}}{${2:children}}{${3:edge options}}",
      "extra edges for family={${1:family}}{${2:parents}}{${3:children}}{${4:edge options}}",
      "extra edges for families={${1:family list}}{${2:edge options}}",
      "extra edges prepend={${1:parents}}{${2:children}}{${3:edge options}}",
      "family extra edges prepend={${1:parents}}{${2:children}}{${3:edge options}}",
      "extra edges prepend for family={${1:family}}{${2:parents}}{${3:children}}{${4:edge options}}",
      "extra edges prepend for families={${1:family list}}{${2:edge options}}",
      "edges shift=",
      "edges up by=${1:<number>} of ${2:<parts>}",
      "edges down by=${1:<number>} of ${2:<parts>}",
      "edges up",
      "edges down",
      "reset edge level shift",
      "switch edge level shift",
      "nullify edge level shift",
      "symbols record reset",
      "symlang/Born=${1:text}",
      "symlang/Bornoutofwedlock=${1:text}",
      "symlang/Stillborn=${1:text}",
      "symlang/Diedonbirthday=${1:text}",
      "symlang/Baptized=${1:text}",
      "symlang/Engaged=${1:text}",
      "symlang/Married=${1:text}",
      "symlang/Divorced=${1:text}",
      "symlang/Partnership=${1:text}",
      "symlang/Died=${1:text}",
      "symlang/Killed=${1:text}",
      "symlang/Buried=${1:text}",
      "symlang/Funeralurn=${1:text}",
      "symlang/Floruit=${1:text}",
      "symlang/Female=${1:text}",
      "symlang/Male=${1:text}",
      "symlang/Neuter=${1:text}",
      "language=",
      "show=${1:text}",
      "show id",
      "show level",
      "show number",
      "show family",
      "show type",
      "template=",
      "template horizontal border=",
      "template vertical border="
    ],
    [
      "fanchart radii={${1:radius1,radius2,...}}",
      "fanchart inner offset={${1:offset1,offset2,...}}",
      "fanchart outer offset={${1:offset1,offset2,...}}",
      "fanchart minor angle=${1:angle}",
      "fanchart major angle=${1:angle}",
      "fanchart angles=${1:minor angle}:${2:major angle}",
      "fanchart open full",
      "fanchart open up",
      "fanchart open up=${1:angle}",
      "fanchart open down",
      "fanchart open down=${1:angle}",
      "fanchart open left",
      "fanchart open left=${1:angle}",
      "fanchart open right",
      "fanchart open right=${1:angle}",
      "fanchart open for=${1:width} x ${2:height}",
      "fanchart reset bounds",
      "fanchart bounds border=",
      "fanchart landscape from level=${1:number}",
      "fanchart text portrait=",
      "fanchart text landscape=",
      "fanchart boundary color=",
      "fanchart boundary width=",
      "fanchart root style={${1:TikZ options}}",
      "fanchart root malefemale",
      "fanchart segment style={${1:TikZ options}}",
      "fanchart segment malefemale",
      "fanchart segment relation",
      "fanchart segment wave",
      "fanchart segment colorwheel",
      "fanchart segment radial",
      "fanchart marker style={${1:TikZ options}}",
      "fanchart marker malefemale",
      "fanchart marker relation",
      "fanchart marker wave",
      "fanchart marker colorwheel",
      "fanchart marker radial",
      "fanchart complemented segment style={${1:TikZ options}}",
      "fanchart complemented marker style={${1:TikZ options}}",
      "fanchart segment style for levels={${1:level list}}{${2:TikZ options}}",
      "fanchart marker style for levels={${1:level list}}{${2:TikZ options}}",
      "fanchart segment style for ids={${1:id list}}{${2:TikZ options}}",
      "fanchart marker style for ids={${1:id list}}{${2:TikZ options}}",
      "fanchart male style={${1:TikZ options}}",
      "fanchart female style={${1:TikZ options}}",
      "fanchart neuter style={${1:TikZ options}}",
      "fanchart ancestor style={${1:TikZ options}}",
      "fanchart descendant style={${1:TikZ options}}",
      "fanchart sibling style={${1:TikZ options}}",
      "fanchart unrelated style={${1:TikZ options}}",
      "fanchart template=",
      "fanchart-segment-definition={${1:code}}",
      "fanchart-marker-definition={${1:code}}",
      "fanchart-segment-code={${1:code}}",
      "fanchart-root-code={${1:code}}",
      "timeflow=",
      "level distance=",
      "level size=",
      "node size=",
      "node size from=${1:<minlength>} to ${2:<maxlength>}",
      "child distance in parent graph=",
      "child distance in child graph=",
      "child distance=",
      "parent distance in parent graph=",
      "parent distance in child graph=",
      "parent distance=",
      "further distance=",
      "id=${1:name}",
      "id prefix=${1:text}",
      "id suffix=${1:text}",
      "options for node={${1:id list}}{${2:options}}",
      "node={${1:options}}",
      "distance=",
      "pivot",
      "pivot=",
      "box={${1:options}}",
      "box clear",
      "node box={${1:options}}",
      "family box={${1:options}}",
      "subtree box={${1:options}}",
      "turn",
      "turn=",
      "male",
      "female",
      "neuter",
      "tikz={${1:TikZ options}}",
      "options for family={${1:id list}}{${2:options}}",
      "family={${1:options}}",
      "pivot shift=",
      "options for subtree={${1:id list}}{${2:options}}",
      "subtree={${1:options}}",
      "level=${1:number}",
      "level ${1:n}/.style={${2:options}}",
      "proband level=${1:number}",
      "tree offset=",
      "after parser={${1:code}}",
      "set position=${1:<node>} at ${2:<position>}",
      "adjust position=${1:<node> <direction>} of ${2:<position>} distance ${3:<distance>}",
      "adjust position=${1:<node> <direction>} of ${2:<position>} distance ${3:<distance>} shift ${4:<shift>}",
      "adjust node=${1:<node> <direction>} of ${2:<ref node>} distance ${3:<distance>}",
      "adjust node=${1:<node> <direction>} of ${2:<ref node>} distance ${3:<distance>} shift ${4:<shift>}",
      "tikzpicture={${1:TikZ options}}",
      "tikzset={${1:TikZ options}}",
      "after tree={${1:TikZ code}}",
      "tcbset={${1:tcolorbox options}}",
      "fit to family=${1:id}",
      "fit to subtree=${1:id}",
      "ignore",
      "ignore node={${1:id list}}",
      "ignore subtree={${1:id list}}",
      "ignore level=${1:number}",
      "ignore parent childs",
      "insert after node={${1:id}}{${2:input data}}",
      "insert after family={${1:id}}{${2:input data}}",
      "insert at begin family={${1:id}}{${2:input data}}",
      "insert at end family={${1:id}}{${2:input data}}",
      "phantom",
      "phantom=",
      "phantom*",
      "phantom*=",
      "insert for childless families={${1:input data}}",
      "insert phantom for childless families",
      "insert for childless families level limit=${1:level}",
      "autofill parents unspecific",
      "autofill parents unspecific=${1:level}",
      "autofill parents unspecific*",
      "autofill parents unspecific*=${1:level}",
      "complemented/.style={${1:options}}",
      "complemented family/.style={${1:options}}",
      "complemented phantom",
      "autofill parents male female",
      "autofill parents male female=${1:level}",
      "autofill parents male female*",
      "autofill parents male female*=${1:level}",
      "autofill parents female male",
      "autofill parents female male=${1:level}",
      "autofill parents female male*",
      "autofill parents female male*=${1:level}",
      "autofill parents none",
      "reset",
      "code={${1:code}}",
      "keysfrom=${1:macro}",
      "node processor=${1:macro}",
      "processing=",
      "content interpreter=${1:macro}",
      "content interpreter code={${1:code}}",
      "content interpreter content={${1:code}}",
      "no content interpreter",
      "deletion content interpreter",
      "database content interpreter",
      "id content interpreter",
      "content interpreter id and content={${1:id}}{${2:code}}",
      "database format=",
      "pref code={${1:code}}",
      "surn code={${1:code}}",
      "nick code={${1:code}}",
      "name=",
      "name font={${1:code}}",
      "empty name text={${1:text}}",
      "name code={${1:code}}",
      "date format=",
      "date code={${1:code}}",
      "calendar text for=${1:<calendar>} is %<{${2:prefix}}{${3:postfix}}",
      "calendar print=",
      "date range full={${1:pre}}{${2:mid}}{${3:app}}",
      "date range before={${1:pre}}{${2:app}}",
      "date range after={${1:pre}}{${2:app}}",
      "date range separator={${1:text}}",
      "place text={${1:pre}}{${2:app}}",
      "event prefix/birth=${1:text}",
      "event prefix/birth/out of wedlock=${1:text}",
      "event prefix/birth/stillborn=${1:text}",
      "event prefix/birth/died=${1:text}",
      "event prefix/baptism=${1:text}",
      "event prefix/engagement=${1:text}",
      "event prefix/marriage=${1:text}",
      "event prefix/marriage/other=${1:text}",
      "event prefix/divorce=${1:text}",
      "event prefix/floruit=${1:text}",
      "event prefix/death=${1:text}",
      "event prefix/death/killed=${1:text}",
      "event prefix/burial=${1:text}",
      "event prefix/burial/cremated=${1:text}",
      "event format=",
      "event text={${1:pre}}{${2:sep date}}{${3:sep place}}{${4:app}}",
      "event code={${1:code}}",
      "list separators={${1:first}}{${2:middle}}{${3:last}}{${4:empty}}",
      "list separators hang",
      "list separators hang=",
      "comment code={${1:code}}",
      "profession code={${1:code}}",
      "info separators={${1:first}}{${2:middle}}{${3:last}}{${4:empty}}",
      "if image defined={${1:true}}{${2:false}}",
      "image prefix=${1:text}",
      "fill zoom DBimage",
      "fill overzoom DBimage",
      "age code={${1:code}}",
      "edges={${1:edge options}}",
      "family edges={${1:edge options}}",
      "edges for family={${1:family}}{${2:edge options}}",
      "subtree edges={${1:edge options}}",
      "edges for subtree={${1:subtree}}{${2:edge options}}",
      "edge/perpendicular",
      "edge/rounded",
      "edge/rounded=",
      "edge/swing",
      "edge/swing=",
      "edge/mesh",
      "edge/mesh={${1:options}}",
      "edge/custom={${1:down}}{${2:up}}{${3:left}}{${4:right}}",
      "edge/none",
      "edge/foreground={${1:TikZ options}}",
      "edge/no foreground",
      "edge/background={${1:TikZ options}}",
      "edge/no background",
      "edge/anchoring=",
      "edge/hide single leg",
      "edge/xshift=",
      "edge/yshift=",
      "label={${1:text}}",
      "label options={${1:TikZ options}}",
      "family label={${1:text}}",
      "subtree label={${1:text}}",
      "family database={${1:data keys}}",
      "label database options={${1:options}}",
      "ignore family database",
      "use family database",
      "add child=${1:<child>} to ${2:<family>}",
      "add parent=${1:<parent>} to ${2:<family>}",
      "remove child=${1:<child>} from ${2:<family>}",
      "remove parent=${1:<parent>} from ${2:<family>}",
      "disconnect",
      "disconnect=",
      "extra edges={${1:parents}}{${2:children}}{${3:edge options}}",
      "family extra edges={${1:parents}}{${2:children}}{${3:edge options}}",
      "extra edges for family={${1:family}}{${2:parents}}{${3:children}}{${4:edge options}}",
      "extra edges for families={${1:family list}}{${2:edge options}}",
      "extra edges prepend={${1:parents}}{${2:children}}{${3:edge options}}",
      "family extra edges prepend={${1:parents}}{${2:children}}{${3:edge options}}",
      "extra edges prepend for family={${1:family}}{${2:parents}}{${3:children}}{${4:edge options}}",
      "extra edges prepend for families={${1:family list}}{${2:edge options}}",
      "edges shift=",
      "edges up by=${1:<number>} of ${2:<parts>}",
      "edges down by=${1:<number>} of ${2:<parts>}",
      "edges up",
      "edges down",
      "reset edge level shift",
      "switch edge level shift",
      "nullify edge level shift",
      "symbols record reset",
      "symlang/Born=${1:text}",
      "symlang/Bornoutofwedlock=${1:text}",
      "symlang/Stillborn=${1:text}",
      "symlang/Diedonbirthday=${1:text}",
      "symlang/Baptized=${1:text}",
      "symlang/Engaged=${1:text}",
      "symlang/Married=${1:text}",
      "symlang/Divorced=${1:text}",
      "symlang/Partnership=${1:text}",
      "symlang/Died=${1:text}",
      "symlang/Killed=${1:text}",
      "symlang/Buried=${1:text}",
      "symlang/Funeralurn=${1:text}",
      "symlang/Floruit=${1:text}",
      "symlang/Female=${1:text}",
      "symlang/Male=${1:text}",
      "symlang/Neuter=${1:text}",
      "language=",
      "show=${1:text}",
      "show id",
      "show level",
      "show number",
      "show family",
      "show type",
      "template=",
      "template horizontal border=",
      "template vertical border="
    ],
    [
      "family number=${1:number}",
      "family id=${1:id}",
      "contour="
    ],
    [
      "runner=${1:file name}",
      "prefix=${1:text}",
      "externalize",
      "force remake",
      "!",
      "-",
      "name=${1:name}",
      "safety=",
      "environment=${1:env}",
      "environment with percent",
      "minipage",
      "minipage=",
      "plain",
      "compiler=${1:text}",
      "runs=${1:number}",
      "input source on error",
      "preclass={${1:code}}",
      "PassOptionsToPackage={${1:options}}{${2:package}}",
      "PassOptionsToClass={${1:options}}{${2:class}}",
      "clear preclass",
      "preamble={${1:code}}",
      "preamble tcbset={${1:tcolorbox options}}",
      "clear preamble"
    ],
    [
      "x=${1:<dimen> or <coord>}",
      "y=${1:<dimen> or <coord>}",
      "z=${1:<dimen> or <coord>}",
      "name path=${1:path}",
      "name path global=${1:path}",
      "name intersections={${1:options}}",
      "turn",
      "current point is local",
      "name=${1:name}",
      "append after command=${1:path}",
      "prefix after command=${1:path}",
      "rounded corners",
      "rounded corners=",
      "sharp corners",
      "x radius=${1:<num> or <dimen>}",
      "y radius=${1:<num> or <dimen>}",
      "radius=",
      "at=${1:coord}",
      "start angle=${1:degrees}",
      "end angle=${1:degrees}",
      "delta angle=${1:degrees}",
      "step=${1:<num> or <dimen> or <coord>}",
      "xstep=${1:<num> or <dimen>}",
      "ystep=${1:<num> or <dimen>}",
      "help lines",
      "bend=${1:coord}",
      "bend pos=${1:fraction}",
      "parabola height=",
      "bend at start",
      "bend at end",
      "to path=${1:path}",
      "save path=${1:macro}",
      "use path=${1:macro}",
      "color=",
      "%color",
      "draw",
      "draw=",
      "line width=",
      "ultra thin",
      "very thin",
      "thin",
      "semithick",
      "thick",
      "very thick",
      "ultra thick",
      "line cap=",
      "line join=",
      "miter limit=${1:factor}",
      "dash pattern=${1:dash pattern}",
      "dash phase=${1:dash phase}",
      "dash=${1:dash pattern} phase ${2:dash phase}",
      "dash expand off",
      "solid",
      "dotted",
      "densely dotted",
      "loosely dotted",
      "dashed",
      "densely dashed",
      "loosely dashed",
      "dash dot",
      "densely dash dot",
      "loosely dash dot",
      "dash dot dot",
      "densely dash dot dot",
      "loosely dash dot dot",
      "double",
      "double=",
      "double distance=",
      "double distance between line centers=",
      "double equal sign distance",
      "fill",
      "fill=",
      "pattern",
      "pattern=${1:name}",
      "pattern color=",
      "nonzero rule",
      "even odd rule",
      "shade",
      "shading=",
      "shading angle=${1:degrees}",
      "arrows=${1:start spec}-${2:end spec}",
      "->",
      "<-",
      "<->",
      "tips",
      "tips=",
      ">=${1:end arrow spec}",
      "shorten <=",
      "shorten >=",
      "inner sep=",
      "inner xsep=",
      "inner ysep=",
      "outer sep=${1:<dimen> or auto}",
      "outer xsep=",
      "outer ysep=",
      "minimum height=",
      "minimum width=",
      "minimum size=",
      "shape aspect=${1:aspect ratio}",
      "shape border uses incircle",
      "shape border rotate=${1:degrees}",
      "text=",
      "node font=${1:font commands}",
      "font=${1:font commands}",
      "text width=",
      "align=",
      "text height=",
      "text depth=",
      "anchor=",
      "above",
      "above=",
      "below",
      "below=",
      "right",
      "right=",
      "left",
      "left=",
      "above left",
      "above right",
      "below left",
      "below right",
      "centered",
      "on grid",
      "node distance=",
      "base left=",
      "base right=",
      "mid left=",
      "mid right=",
      "above=of ${1:node}",
      "below=of ${1:node}",
      "right=of ${1:node}",
      "left=of ${1:node}",
      "transform shape",
      "transform shape nonlinear",
      "pos=${1:fraction}",
      "auto",
      "auto=",
      "swap",
      "sloped",
      "allow upside down",
      "midway",
      "near start",
      "near end",
      "very near start",
      "very near end",
      "at start",
      "at end",
      "label=${1:angle}:${2:text}",
      "label=[${1:options}]${2:angle}:${3:text}",
      "label position=${1:degrees}",
      "absolute",
      "label distance=",
      "pin=${1:angle}:${2:text}",
      "pin=[${1:options}]${2:angle}:${3:text}",
      "pin distance=",
      "pin edge={${1:options}}",
      "node quotes mean=${1:replacement}",
      "remember picture",
      "overlay",
      "every new ->",
      "every new --",
      "every new <->",
      "every new <-",
      "every new -!-",
      "new set=${1:set name}",
      "set=${1:set name}",
      "growth parent anchor=",
      "growth function=${1:macro}",
      "edge from parent path=${1:path}",
      "draw opacity=${1:value}",
      "opacity=${1:value}",
      "transparent",
      "ultra nearly transparent",
      "very nearly transparent",
      "nearly transparent",
      "semitransparent",
      "nearly opaque",
      "very nearly opaque",
      "ultra nearly opaque",
      "opaque",
      "fill opacity=${1:value}",
      "text opacity=${1:value}",
      "path fading",
      "path fading=${1:name}",
      "fit fading",
      "fading transform={${1:options}}",
      "fading angle=${1:degrees}",
      "scope fading=${1:name}",
      "decoration={${1:options}}",
      "decorate",
      "shift={${1:coordinate}}",
      "shift only",
      "xshift=",
      "yshift=",
      "scale=${1:scale}",
      "xscale=${1:scale}",
      "yscale=${1:scale}",
      "xslant=${1:factor}",
      "yslant=${1:factor}",
      "rotate=${1:degrees}",
      "rotate around={${1:degree}:${2:coordinate}}",
      "rotate around x=${1:degrees}",
      "rotate around y=${1:degrees}",
      "rotate around z=${1:degrees}",
      "cm={${1:a,b,c,d,coord}}",
      "reset cm",
      "transform canvas={${1:options}}",
      "out=${1:degrees}",
      "in=${1:degrees}",
      "relative",
      "bend left",
      "bend left=${1:degrees}",
      "bend right",
      "bend right=${1:degrees}",
      "bend angle=${1:degrees}",
      "looseness=${1:number}",
      "out looseness=${1:number}",
      "in looseness=${1:number}",
      "min distance=",
      "max distance=",
      "out min distance=",
      "out max distance=",
      "in min distance=",
      "in max distance=",
      "distance=",
      "out distance=",
      "in distance=",
      "out control=${1:coord}",
      "in control=${1:coord}",
      "controls=${1:coord1} and ${2:coord2}",
      "%tikzstyle",
      "column sep=",
      "row sep=",
      "every cell={${1:row}}{${2:column}}",
      "cells={${1:options}}",
      "nodes={${1:options}}",
      "column ${1:n}/.style={${2:options}}",
      "every odd column/.style={${1:options}}",
      "every even column/.style={${1:options}}",
      "row ${1:m}/.style={${2:options}}",
      "every odd row/.style={${1:options}}",
      "every even row/.style={${1:options}}",
      "row ${1:m} column ${2:n}/.style={${3:options}}",
      "execute at begin cell=${1:code}",
      "execute at end cell=${1:code}",
      "execute at empty cell=${1:code}",
      "matrix anchor=${1:anchor}",
      "ampersand replacement=${1:macro}",
      "baseline",
      "baseline=${1:<dimen> or <coord> or default}",
      "execute at begin picture=${1:code}",
      "execute at end picture=${1:code}",
      "every scope/.style={${1:options}}",
      "every path/.style={${1:options}}",
      "every circle/.style={${1:options}}",
      "every to/.style={${1:options}}",
      "every node/.style={${1:options}}",
      "every lower node part/.style={${1:options}}",
      "every label/.style={${1:options}}",
      "every pin/.style={${1:options}}",
      "every pin edge/.style={${1:options}}",
      "every label quotes/.style={${1:options}}",
      "every pin quotes/.style={${1:options}}",
      "every edge/.style={${1:options}}",
      "every edge quotes/.style={${1:options}}",
      "every pic/.style={${1:options}}",
      "every pic quotes/.style={${1:options}}",
      "every new ->/.style={${1:options}}",
      "every new --/.style={${1:options}}",
      "every new <->/.style={${1:options}}",
      "every new <-/.style={${1:options}}",
      "every new -!-/.style={${1:options}}",
      "every matrix/.style={${1:options}}",
      "every outer matrix/.style={${1:options}}",
      "every child/.style={${1:options}}",
      "every child node/.style={${1:options}}",
      "every plot/.style={${1:options}}",
      "every mark/.style={${1:options}}",
      "every loop/.style={${1:options}}",
      "execute at begin to=${1:code}",
      "execute at end to=${1:code}",
      "execute at begin node=${1:code}",
      "execute at end node=${1:code}",
      "trim left",
      "trim left=${1:<dimen> or <coord> or default}",
      "trim right",
      "trim right=${1:<dimen> or <coord> or default}",
      "tri lowlevel",
      "name prefix=${1:text}",
      "name suffix=${1:text}",
      "badness warnings for centered text",
      "node halign header=${1:macro}",
      "quotes mean label",
      "quotes mean pin",
      "level/.style={${1:options}}",
      "level ${1:n}/.style={${2:options}}",
      "level distance=",
      "sibling distance=",
      "edge from parent/.style={${1:options}}",
      "variable=${1:macro}",
      "samples=${1:number}",
      "domain=${1:start}:${2:end}",
      "samples at=${1:samples list}",
      "parametric",
      "range=${1:start}:${2:end}",
      "yrange=${1:start}:${2:end}",
      "xrange=${1:start}:${2:end}",
      "id=${1:id}",
      "prefix",
      "raw gnuplot",
      "mark=${1:mark}",
      "mark repeat=${1:number}",
      "mark phase=${1:number}",
      "mark indices=${1:list}",
      "mark size=",
      "mark options={${1:options}}",
      "no marks",
      "no markers",
      "sharp plot",
      "smooth",
      "tension=${1:value}",
      "smooth cycle",
      "const plot",
      "const plot mark left",
      "const plot mark right",
      "const plot mark mid",
      "jump mark left",
      "jump mark right",
      "jump mark mid",
      "ycomb",
      "xcomb",
      "polar comb",
      "ybar",
      "xbar",
      "ybar interval",
      "xbar interval",
      "only marks",
      "blend mode=",
      "blend group=",
      "bar width=",
      "bar shift=",
      "bar interval shift=${1:factor}",
      "bar interval width=${1:scale}",
      "matrix/inner style order={${1:list}}",
      "pic type=${1:type}",
      "pics/code=${1:code}",
      "pics/foreground code=${1:code}",
      "pics/background code=${1:code}",
      "pic text=${1:text}",
      "pic text options={${1:options}}"
    ]
  ]
}